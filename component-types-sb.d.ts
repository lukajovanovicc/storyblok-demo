// This file was generated by the storyblok CLI.
// DO NOT MODIFY THIS FILE BY HAND.
import type { ISbStoryData } from "storyblok";
export type MultiassetStoryblok = {
  alt: string | null;
  copyright?: string | null;
  fieldtype: "asset";
  id: number;
  filename: string | null;
  name: string;
  title: string | null;
  focus: string | null;
  meta_data?: {
    [k: string]: any;
  };
  source?: string | null;
  is_external_url?: boolean;
  is_private?: boolean;
  src?: string;
  updated_at?: string;
  width?: number | null;
  height?: number | null;
  aspect_ratio?: number | null;
  public_id?: string | null;
  content_type?: string;
  [k: string]: any;
}[];

export interface AboutStoryblok {
  title?: string;
  description?: string;
  subTitle?: string;
  subItems?: SubItemStoryblok[];
  button?: ButtonStoryblok[];
  images?: MultiassetStoryblok;
  switchTextPlace?: boolean;
  component: "about";
  _uid: string;
  [k: string]: any;
}

export interface AccordionStoryblok {
  title: string;
  text: string;
  component: "accordion";
  _uid: string;
  [k: string]: any;
}

export interface ButtonStoryblok {
  color: "" | "bg-blue-500" | "bg-red-500" | "bg-green-500" | "bg-purple-500" | "bg-yellow-500";
  text?: string;
  component: "button";
  _uid: string;
  [k: string]: any;
}

export interface ContactStoryblok {
  title?: string;
  description?: string;
  phone?: string;
  email?: string;
  address?: string;
  form: FormStoryblok[];
  component: "contact";
  _uid: string;
  [k: string]: any;
}

export interface FaqStoryblok {
  label?: string;
  title?: string;
  description?: string;
  accordions?: AccordionStoryblok[];
  component: "FAQ";
  _uid: string;
  [k: string]: any;
}

export interface FooterStoryblok {
  group?: FooterGroupStoryblok[];
  color?: "" | "bg-blue-500" | "bg-red-500" | "bg-purple-500" | "bg-green-500" | "bg-yellow-500";
  component: "footer";
  _uid: string;
  [k: string]: any;
}

export interface FooterGroupStoryblok {
  title: string;
  links: FooterLinkStoryblok[];
  component: "footer-group";
  _uid: string;
  [k: string]: any;
}

export type MultilinkStoryblok =
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      anchor?: string;
      rel?: string;
      title?: string;
      prep?: string;
      linktype: "story";
      story?: {
        name: string;
        created_at?: string;
        published_at?: string;
        id: number;
        uuid: string;
        content?: {
          [k: string]: any;
        };
        slug: string;
        full_slug: string;
        sort_by_date?: null | string;
        position?: number;
        tag_list?: string[];
        is_startpage?: boolean;
        parent_id?: null | number;
        meta_data?: null | {
          [k: string]: any;
        };
        group_id?: string;
        first_published_at?: string;
        release_id?: null | number;
        lang?: string;
        path?: null | string;
        alternates?: any[];
        default_full_slug?: null | string;
        translated_slugs?: null | any[];
        [k: string]: any;
      };
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      linktype: "url";
      rel?: string;
      title?: string;
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      email?: string;
      linktype: "email";
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      linktype: "asset";
      [k: string]: any;
    };

export interface FooterLinkStoryblok {
  label: string;
  link: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "footer-link";
  _uid: string;
  [k: string]: any;
}

export interface FormStoryblok {
  title?: string;
  description?: string;
  buttonText?: string;
  input?: InputStoryblok[];
  component: "form";
  _uid: string;
  [k: string]: any;
}

export interface InputStoryblok {
  type?: "" | "classic" | "textarea";
  label?: string;
  placeholder?: string;
  component: "input";
  _uid: string;
  [k: string]: any;
}

export interface NavbarStoryblok {
  items?: NavItemStoryblok[];
  search?: boolean;
  color?: "" | "bg-blue-500" | "bg-red-500" | "bg-green-500" | "bg-purple-500" | "bg-yellow-500";
  component: "navbar";
  _uid: string;
  [k: string]: any;
}

export interface NavItemStoryblok {
  text?: string;
  component: "nav-item";
  _uid: string;
  [k: string]: any;
}

export interface PageStoryblok {
  body?: (
    | NavbarStoryblok
    | FooterStoryblok
    | TestimonialsStoryblok
    | AboutStoryblok
    | ProductStoryblok
    | ContactStoryblok
    | FaqStoryblok
  )[];
  darkTheme?: boolean;
  font?: "" | "font-sans" | "font-serif" | "font-mono";
  mainColor?: "" | "blue" | "red" | "green" | "purple" | "yellow";
  component: "page";
  _uid: string;
  [k: string]: any;
}

export interface AssetStoryblok {
  alt: string | null;
  copyright?: string | null;
  fieldtype: "asset";
  id: number;
  filename: string | null;
  name: string;
  title: string | null;
  focus: string | null;
  meta_data?: {
    [k: string]: any;
  };
  source?: string | null;
  is_external_url?: boolean;
  is_private?: boolean;
  src?: string;
  updated_at?: string;
  width?: number | null;
  height?: number | null;
  aspect_ratio?: number | null;
  public_id?: string | null;
  content_type?: string;
  [k: string]: any;
}

export interface ProductStoryblok {
  label?: string;
  title?: string;
  description?: string;
  button?: ButtonStoryblok[];
  image: AssetStoryblok;
  switchTextPlace?: boolean;
  component: "product";
  _uid: string;
  [k: string]: any;
}

export interface SlideStoryblok {
  image: AssetStoryblok;
  details: string;
  name: string;
  position: string;
  component: "slide";
  _uid: string;
  [k: string]: any;
}

export interface SubItemStoryblok {
  text?: string;
  component: "sub-item";
  _uid: string;
  [k: string]: any;
}

export interface TestimonialsStoryblok {
  label?: string;
  title?: string;
  description?: string;
  slides: SlideStoryblok[];
  component: "testimonials";
  _uid: string;
  [k: string]: any;
}
